{"ast":null,"code":"import _slicedToArray from\"/Users/kovacsboldizsar/Documents/O\\u0308nke\\u0301pze\\u0301s/React/Udemy React Course/food-order/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"/Users/kovacsboldizsar/Documents/O\\u0308nke\\u0301pze\\u0301s/React/Udemy React Course/food-order/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/kovacsboldizsar/Documents/O\\u0308nke\\u0301pze\\u0301s/React/Udemy React Course/food-order/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useReducer}from'react';import CartContext from'./cart-context';import{jsx as _jsx}from\"react/jsx-runtime\";var defaultCartState={items:[],totalAmount:0};var cartReducer=function cartReducer(state,action){if(action.type==='ADD'){var updatedTotalAmount=state.totalAmount+action.item.price*action.item.amount;var existingCartItemIndex=state.items.findIndex(function(item){return item.id===action.item.id;});var existingCartItem=state.items[existingCartItemIndex];var updatedItems;if(existingCartItem){var updatedItem=_objectSpread(_objectSpread({},existingCartItem),{},{amount:existingCartItem.amount+action.item.amount});updatedItems=_toConsumableArray(state.items);updatedItems[existingCartItemIndex]=updatedItem;}else{updatedItems=state.items.concat(action.item);}return{items:updatedItems,totalAmount:updatedTotalAmount};}else if(action.type==='REMOVE'){var _existingCartItemIndex=state.items.findIndex(function(item){return item.id===action.id;});var existingItem=state.items[_existingCartItemIndex];var _updatedTotalAmount=state.totalAmount-existingItem.price;var _updatedItems;if(existingItem.amount===1){_updatedItems=state.items.filter(function(item){return item.id!==action.id;});}else{var _updatedItem=_objectSpread(_objectSpread({},existingItem),{},{amount:existingItem.amount-1});_updatedItems=_toConsumableArray(state.items);_updatedItems[_existingCartItemIndex]=_updatedItem;}return{items:_updatedItems,totalAmount:_updatedTotalAmount};}else if(action.type==='ADD_ONE'){var _updatedTotalAmount2=state.totalAmount+action.item.price;var _existingCartItemIndex2=state.items.findIndex(function(item){return item.id===action.item.id;});var _existingCartItem=state.items[_existingCartItemIndex2];var _updatedItems2;if(_existingCartItem){var _updatedItem2=_objectSpread(_objectSpread({},_existingCartItem),{},{amount:_existingCartItem.amount+1});_updatedItems2=_toConsumableArray(state.items);_updatedItems2[_existingCartItemIndex2]=_updatedItem2;}else{_updatedItems2=state.items.concat(action.item);}return{items:_updatedItems2,totalAmount:_updatedTotalAmount2};}else if(action.type==='CLEAR'){return defaultCartState;}return defaultCartState;};var CartProvider=function CartProvider(props){var _useReducer=useReducer(cartReducer,defaultCartState),_useReducer2=_slicedToArray(_useReducer,2),cartState=_useReducer2[0],dispatchCartAction=_useReducer2[1];var addItemToCartHandler=function addItemToCartHandler(item){dispatchCartAction({type:'ADD',item:item});};var removeItemFromCartHandler=function removeItemFromCartHandler(id){dispatchCartAction({type:'REMOVE',id:id});};var addOneItemToCartHandler=function addOneItemToCartHandler(item){dispatchCartAction({type:'ADD_ONE',item:item});};var clearCartHandler=function clearCartHandler(item){dispatchCartAction({type:'CLEAR'});};var cartContext={items:cartState.items,totalAmount:cartState.totalAmount,addItem:addItemToCartHandler,removeItem:removeItemFromCartHandler,addOneItem:addOneItemToCartHandler,clearCart:clearCartHandler};return/*#__PURE__*/_jsx(CartContext.Provider,{value:cartContext,children:props.children});};export default CartProvider;","map":{"version":3,"names":["useReducer","CartContext","jsx","_jsx","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","_objectSpread","_toConsumableArray","concat","existingItem","filter","CartProvider","props","_useReducer","_useReducer2","_slicedToArray","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","addOneItemToCartHandler","clearCartHandler","cartContext","addItem","removeItem","addOneItem","clearCart","Provider","value","children"],"sources":["/Users/kovacsboldizsar/Documents/Önképzés/React/Udemy React Course/food-order/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from 'react'\nimport CartContext from './cart-context'\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n    if (action.type === 'ADD') {\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n\n        const existingCartItemIndex = state.items.findIndex(\n            (item) => item.id === action.item.id);\n        const existingCartItem = state.items[existingCartItemIndex];\n        let updatedItems;\n\n        if (existingCartItem) {\n            const updatedItem = {\n                ...existingCartItem,\n                amount: existingCartItem.amount + action.item.amount\n            };\n            updatedItems = [...state.items];\n            updatedItems[existingCartItemIndex] = updatedItem;\n        } else {\n            updatedItems = state.items.concat(action.item);\n        }\n\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        };\n    }\n    else if (action.type === 'REMOVE') {\n        const existingCartItemIndex = state.items.findIndex(\n            (item) => item.id === action.id);\n        const existingItem = state.items[existingCartItemIndex];\n        const updatedTotalAmount = state.totalAmount - existingItem.price;\n        let updatedItems;\n        if (existingItem.amount === 1) {\n            updatedItems = state.items.filter((item) => item.id !== action.id);\n        } else {\n            const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n            updatedItems = [...state.items];\n            updatedItems[existingCartItemIndex] = updatedItem;\n        }\n\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        }\n    }\n    else if (action.type === 'ADD_ONE') {\n        const updatedTotalAmount = state.totalAmount + action.item.price;\n\n        const existingCartItemIndex = state.items.findIndex(\n            (item) => item.id === action.item.id);\n        const existingCartItem = state.items[existingCartItemIndex];\n        let updatedItems;\n\n        if (existingCartItem) {\n            const updatedItem = {\n                ...existingCartItem,\n                amount: existingCartItem.amount + 1\n            };\n            updatedItems = [...state.items];\n            updatedItems[existingCartItemIndex] = updatedItem;\n        } else {\n            updatedItems = state.items.concat(action.item);\n        }\n\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        };\n    }\n    else if (action.type === 'CLEAR') {\n        return defaultCartState;\n    }\n\n    return (defaultCartState);\n}\n\nconst CartProvider = (props) => {\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n    const addItemToCartHandler = (item) => {\n        dispatchCartAction({\n            type: 'ADD',\n            item: item\n        });\n    }\n\n    const removeItemFromCartHandler = (id) => {\n        dispatchCartAction({\n            type: 'REMOVE',\n            id: id\n        })\n    }\n\n    const addOneItemToCartHandler = (item) => {\n        dispatchCartAction({\n            type: 'ADD_ONE',\n            item: item\n        });\n    }\n\n    const clearCartHandler = (item) => {\n        dispatchCartAction({\n            type: 'CLEAR'\n        });\n    }\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler,\n        addOneItem: addOneItemToCartHandler,\n        clearCart: clearCartHandler\n    };\n\n    return (\n        <CartContext.Provider value={cartContext}>\n            {props.children}\n        </CartContext.Provider>\n    );\n}\n\nexport default CartProvider;"],"mappings":"siBAAA,OAASA,UAAU,KAAQ,OAAO,CAClC,MAAO,CAAAC,WAAW,KAAM,gBAAgB,QAAAC,GAAA,IAAAC,IAAA,yBAExC,GAAM,CAAAC,gBAAgB,CAAG,CACrBC,KAAK,CAAE,EAAE,CACTC,WAAW,CAAE,CACjB,CAAC,CAED,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIC,KAAK,CAAEC,MAAM,CAAK,CACnC,GAAIA,MAAM,CAACC,IAAI,GAAK,KAAK,CAAE,CACvB,GAAM,CAAAC,kBAAkB,CAAGH,KAAK,CAACF,WAAW,CAAGG,MAAM,CAACG,IAAI,CAACC,KAAK,CAAGJ,MAAM,CAACG,IAAI,CAACE,MAAM,CAErF,GAAM,CAAAC,qBAAqB,CAAGP,KAAK,CAACH,KAAK,CAACW,SAAS,CAC/C,SAACJ,IAAI,QAAK,CAAAA,IAAI,CAACK,EAAE,GAAKR,MAAM,CAACG,IAAI,CAACK,EAAE,GAAC,CACzC,GAAM,CAAAC,gBAAgB,CAAGV,KAAK,CAACH,KAAK,CAACU,qBAAqB,CAAC,CAC3D,GAAI,CAAAI,YAAY,CAEhB,GAAID,gBAAgB,CAAE,CAClB,GAAM,CAAAE,WAAW,CAAAC,aAAA,CAAAA,aAAA,IACVH,gBAAgB,MACnBJ,MAAM,CAAEI,gBAAgB,CAACJ,MAAM,CAAGL,MAAM,CAACG,IAAI,CAACE,MAAM,EACvD,CACDK,YAAY,CAAAG,kBAAA,CAAOd,KAAK,CAACH,KAAK,CAAC,CAC/Bc,YAAY,CAACJ,qBAAqB,CAAC,CAAGK,WAAW,CACrD,CAAC,IAAM,CACHD,YAAY,CAAGX,KAAK,CAACH,KAAK,CAACkB,MAAM,CAACd,MAAM,CAACG,IAAI,CAAC,CAClD,CAEA,MAAO,CACHP,KAAK,CAAEc,YAAY,CACnBb,WAAW,CAAEK,kBACjB,CAAC,CACL,CAAC,IACI,IAAIF,MAAM,CAACC,IAAI,GAAK,QAAQ,CAAE,CAC/B,GAAM,CAAAK,sBAAqB,CAAGP,KAAK,CAACH,KAAK,CAACW,SAAS,CAC/C,SAACJ,IAAI,QAAK,CAAAA,IAAI,CAACK,EAAE,GAAKR,MAAM,CAACQ,EAAE,GAAC,CACpC,GAAM,CAAAO,YAAY,CAAGhB,KAAK,CAACH,KAAK,CAACU,sBAAqB,CAAC,CACvD,GAAM,CAAAJ,mBAAkB,CAAGH,KAAK,CAACF,WAAW,CAAGkB,YAAY,CAACX,KAAK,CACjE,GAAI,CAAAM,aAAY,CAChB,GAAIK,YAAY,CAACV,MAAM,GAAK,CAAC,CAAE,CAC3BK,aAAY,CAAGX,KAAK,CAACH,KAAK,CAACoB,MAAM,CAAC,SAACb,IAAI,QAAK,CAAAA,IAAI,CAACK,EAAE,GAAKR,MAAM,CAACQ,EAAE,GAAC,CACtE,CAAC,IAAM,CACH,GAAM,CAAAG,YAAW,CAAAC,aAAA,CAAAA,aAAA,IAAQG,YAAY,MAAEV,MAAM,CAAEU,YAAY,CAACV,MAAM,CAAG,CAAC,EAAE,CACxEK,aAAY,CAAAG,kBAAA,CAAOd,KAAK,CAACH,KAAK,CAAC,CAC/Bc,aAAY,CAACJ,sBAAqB,CAAC,CAAGK,YAAW,CACrD,CAEA,MAAO,CACHf,KAAK,CAAEc,aAAY,CACnBb,WAAW,CAAEK,mBACjB,CAAC,CACL,CAAC,IACI,IAAIF,MAAM,CAACC,IAAI,GAAK,SAAS,CAAE,CAChC,GAAM,CAAAC,oBAAkB,CAAGH,KAAK,CAACF,WAAW,CAAGG,MAAM,CAACG,IAAI,CAACC,KAAK,CAEhE,GAAM,CAAAE,uBAAqB,CAAGP,KAAK,CAACH,KAAK,CAACW,SAAS,CAC/C,SAACJ,IAAI,QAAK,CAAAA,IAAI,CAACK,EAAE,GAAKR,MAAM,CAACG,IAAI,CAACK,EAAE,GAAC,CACzC,GAAM,CAAAC,iBAAgB,CAAGV,KAAK,CAACH,KAAK,CAACU,uBAAqB,CAAC,CAC3D,GAAI,CAAAI,cAAY,CAEhB,GAAID,iBAAgB,CAAE,CAClB,GAAM,CAAAE,aAAW,CAAAC,aAAA,CAAAA,aAAA,IACVH,iBAAgB,MACnBJ,MAAM,CAAEI,iBAAgB,CAACJ,MAAM,CAAG,CAAC,EACtC,CACDK,cAAY,CAAAG,kBAAA,CAAOd,KAAK,CAACH,KAAK,CAAC,CAC/Bc,cAAY,CAACJ,uBAAqB,CAAC,CAAGK,aAAW,CACrD,CAAC,IAAM,CACHD,cAAY,CAAGX,KAAK,CAACH,KAAK,CAACkB,MAAM,CAACd,MAAM,CAACG,IAAI,CAAC,CAClD,CAEA,MAAO,CACHP,KAAK,CAAEc,cAAY,CACnBb,WAAW,CAAEK,oBACjB,CAAC,CACL,CAAC,IACI,IAAIF,MAAM,CAACC,IAAI,GAAK,OAAO,CAAE,CAC9B,MAAO,CAAAN,gBAAgB,CAC3B,CAEA,MAAQ,CAAAA,gBAAgB,CAC5B,CAAC,CAED,GAAM,CAAAsB,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,KAAK,CAAK,CAC5B,IAAAC,WAAA,CAAwC5B,UAAU,CAACO,WAAW,CAAEH,gBAAgB,CAAC,CAAAyB,YAAA,CAAAC,cAAA,CAAAF,WAAA,IAA1EG,SAAS,CAAAF,YAAA,IAAEG,kBAAkB,CAAAH,YAAA,IAEpC,GAAM,CAAAI,oBAAoB,CAAG,QAAvB,CAAAA,oBAAoBA,CAAIrB,IAAI,CAAK,CACnCoB,kBAAkB,CAAC,CACftB,IAAI,CAAE,KAAK,CACXE,IAAI,CAAEA,IACV,CAAC,CAAC,CACN,CAAC,CAED,GAAM,CAAAsB,yBAAyB,CAAG,QAA5B,CAAAA,yBAAyBA,CAAIjB,EAAE,CAAK,CACtCe,kBAAkB,CAAC,CACftB,IAAI,CAAE,QAAQ,CACdO,EAAE,CAAEA,EACR,CAAC,CAAC,CACN,CAAC,CAED,GAAM,CAAAkB,uBAAuB,CAAG,QAA1B,CAAAA,uBAAuBA,CAAIvB,IAAI,CAAK,CACtCoB,kBAAkB,CAAC,CACftB,IAAI,CAAE,SAAS,CACfE,IAAI,CAAEA,IACV,CAAC,CAAC,CACN,CAAC,CAED,GAAM,CAAAwB,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAIxB,IAAI,CAAK,CAC/BoB,kBAAkB,CAAC,CACftB,IAAI,CAAE,OACV,CAAC,CAAC,CACN,CAAC,CAED,GAAM,CAAA2B,WAAW,CAAG,CAChBhC,KAAK,CAAE0B,SAAS,CAAC1B,KAAK,CACtBC,WAAW,CAAEyB,SAAS,CAACzB,WAAW,CAClCgC,OAAO,CAAEL,oBAAoB,CAC7BM,UAAU,CAAEL,yBAAyB,CACrCM,UAAU,CAAEL,uBAAuB,CACnCM,SAAS,CAAEL,gBACf,CAAC,CAED,mBACIjC,IAAA,CAACF,WAAW,CAACyC,QAAQ,EAACC,KAAK,CAAEN,WAAY,CAAAO,QAAA,CACpCjB,KAAK,CAACiB,QAAQ,CACG,CAAC,CAE/B,CAAC,CAED,cAAe,CAAAlB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}